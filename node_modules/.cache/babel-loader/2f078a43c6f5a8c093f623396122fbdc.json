{"ast":null,"code":"import _slicedToArray from \"A:/travelingbuddycheckpoint1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"A:\\\\travelingbuddycheckpoint1\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { CssBaseline, Grid } from \"@material-ui/core\";\nimport { getPlacesData } from \"./api/index\";\nimport Header from \"./Components/Header/Header\";\nimport List from \"./Components/List/List\";\nimport Map from \"./Components/Map/Map\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      places = _useState2[0],\n      setPlaces = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      childClicked = _useState4[0],\n      setChildClicked = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      coordinates = _useState6[0],\n      setCoordinates = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      bounds = _useState8[0],\n      setBounds = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isLoading = _useState10[0],\n      setIsLoading = _useState10[1];\n\n  useEffect(function () {\n    navigator.geolocation.getCurrentPosition(function (_ref) {\n      var _ref$coords = _ref.coords,\n          latitude = _ref$coords.latitude,\n          longitude = _ref$coords.longitude;\n      setCoordinates({\n        lat: latitude,\n        lng: longitude\n      });\n    });\n  }, []);\n  useEffect(function () {\n    setIsLoading(true);\n    getPlacesData(bounds.sw, bounds.ne).then(function (data) {\n      setPlaces(data);\n      setIsLoading(false);\n    });\n  }, [coordinates, bounds]); //This empty array is a dependency array and indicates that the code inside the function only triggers when the app starts and for once too\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          places: places,\n          childClicked: childClicked,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          setCoordinates: setCoordinates,\n          setBounds: setBounds,\n          coordinates: coordinates,\n          places: places,\n          setChildClicked: setChildClicked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"96IlLxR4hp7dsYNRqm0/9J/7Wq8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["A:/travelingbuddycheckpoint1/src/App.js"],"names":["React","useEffect","useState","CssBaseline","Grid","getPlacesData","Header","List","Map","App","places","setPlaces","childClicked","setChildClicked","coordinates","setCoordinates","bounds","setBounds","isLoading","setIsLoading","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","lat","lng","sw","ne","then","data","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { CssBaseline, Grid } from \"@material-ui/core\";\nimport { getPlacesData } from \"./api/index\";\nimport Header from \"./Components/Header/Header\";\nimport List from \"./Components/List/List\";\nimport Map from \"./Components/Map/Map\";\n\nfunction App() {\n  const [places, setPlaces] = useState([]);\n  const [childClicked, setChildClicked] = useState(null);\n\n\n  const [coordinates, setCoordinates] = useState({});\n  const [bounds, setBounds] = useState({});\n\n  const [isLoading, setIsLoading] = useState(false)\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      ({ coords: { latitude, longitude } }) => {\n        setCoordinates({ lat: latitude, lng: longitude });\n      }\n    );\n  }, []);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPlacesData(bounds.sw, bounds.ne).then((data) => {\n      setPlaces(data);\n      setIsLoading(false);\n    });\n  }, [coordinates, bounds]); //This empty array is a dependency array and indicates that the code inside the function only triggers when the app starts and for once too\n\n  return (\n    <>\n      <CssBaseline />\n      <Header />\n      <Grid container spacing={3} style={{ width: \"100%\" }}>\n        <Grid item xs={12} md={4}>\n          <List places={places} \n            childClicked={childClicked}\n            isLoading={isLoading}\n          />\n        </Grid>\n        <Grid item xs={12} md={8}>\n          <Map\n            setCoordinates={setCoordinates}\n            setBounds={setBounds}\n            coordinates={coordinates}\n            places={places}\n            setChildClicked={setChildClicked}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}